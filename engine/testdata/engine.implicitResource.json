[
  {
    "description": "Simple engine",
    "engine":
    {
      "systems": [
        {
          "providerType": "Openstack"
        }
      ],
      "resources": [
        {
          "Name": "Server",
          "args": {
            "_disk": "100GiB",
            "_memory": "4GiB",
            "imageRef": "Fedora-31",
            "key_name": "ccit",
            "networks": "ccit-net"
          }
        }
      ],
      "providers": [
        {
          "match": {
            "properties": {
              "providerType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "implicit": {
            "_disk": {
              "type": "string"
            },
            "_memory": {
              "type": "string"
            }
          },
          "resource": "Server",
          "action": "create",
          "parameters": {
            "flavorRef": {
              "required": true,
              "explicit": {
                "type": "string"
              },
              "implicit": [
                {
                  "resource": "SizeConverter",
                  "args": {
                    "from": "$_memory",
                    "to": "MiB"
                  },
                  "type": "tool",
                  "store": "$_memory",
                  "action": ""
                },
                {
                  "resource": "SizeConverter",
                  "args": {
                    "from": "$_disk",
                    "to": "GiB"
                  },
                  "type": "tool",
                  "store": "$_disk",
                  "action": ""
                },
                {
                  "resource": "Flavor",
                  "args": {
                    "minDisk": "$_disk",
                    "minRam": "$_memory"
                  },
                  "type": "resource",
                  "store": "$_flavors",
                  "action": "get"
                },
                {
                  "resource": "JsonFirst",
                  "args": {
                    "data": "$_flavors"
                  },
                  "type": "tool",
                  "store": "$_flavor",
                  "action": ""
                },
                {
                  "resource": "JsonPath",
                  "args": {
                    "data": "$_flavor",
                    "path": ".name"
                  },
                  "type": "tool",
                  "store": "flavorRef",
                  "action": ""
                }
              ]
            },
            "imageRef": {
              "required": true,
              "explicit": {
                "$id": "imageRef",
                "oeRequired": true,
                "type": "string"
              },
              "implicit": null
            },
            "key_name": {
              "required": false,
              "explicit": {
                "$id": "key_name",
                "type": "string"
              },
              "implicit": null
            },
            "name": {
              "required": true,
              "explicit": {
                "type": "string"
              },
              "implicit": [
                {
                  "resource": "NameGenerator",
                  "args": {
                    "random": true
                  },
                  "type": "tool",
                  "store": "name",
                  "action": "create"
                }
              ]
            },
            "networks": {
              "required": true,
              "explicit": {
                "$id": "networks",
                "oeRequired": true,
                "type": "string"
              },
              "implicit": null
            }
          },
          "debug": false
        },
        {
          "match": {
            "properties": {
              "providerType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "implicit": null,
          "resource": "Flavor",
          "action": "get",
          "parameters": {
            "is_public": {
              "required": false,
              "explicit": {
                "$id": "is_public",
                "type": "boolean"
              },
              "implicit": null
            },
            "minDisk": {
              "required": false,
              "explicit": {
                "$id": "minDisk",
                "type": "string"
              },
              "implicit": null
            },
            "minRam": {
              "required": false,
              "explicit": {
                "$id": "minRam",
                "type": "string"
              },
              "implicit": null
            }
          },
          "debug": false
        }
      ],
      "provisioners": [
        {
          "resource": "Server",
          "parameters": {
            "flavorRef": {
              "type": "string"
            },
            "imageRef": {
              "type": "string"
            },
            "key_name": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "networks": {
              "type": "string"
            }
          },
          "match": {
            "properties": {
              "providerType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "action": "create",
          "logic": "linchpin_openstack_create.tmpl",
          "debug": false,
          "required": [
            "name",
            "flavorRef",
            "imageRef",
            "key_name"
          ]
        },
        {
          "resource": "Flavor",
          "parameters": {
            "is_public": {
              "type": "boolean"
            },
            "minDisk": {
              "type": "string"
            },
            "minRam": {
              "type": "string"
            }
          },
          "match": {
            "properties": {
              "providerType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "action": "get",
          "logic": "openstack_mock_flavor.tmpl",
          "debug": false,
          "required": null
        },
        {
          "resource": "NetworkIPAvailability",
          "parameters": {
            "network_id": {
              "type": "string"
            }
          },
          "match": {
            "properties": {
              "providerType": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "action": "get",
          "logic": "openstack_mock_networkipavailability.tmpl",
          "debug": false,
          "required": null
        }
      ],
      "solutions": [
        {
          "action": "create",
          "debug": false,
          "provider": {
            "match": {
              "properties": {
                "providerType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "implicit": {
              "_disk": {
                "type": "string"
              },
              "_memory": {
                "type": "string"
              }
            },
            "resource": "Server",
            "action": "create",
            "parameters": {
              "flavorRef": {
                "required": true,
                "explicit": {
                  "type": "string"
                },
                "implicit": [
                  {
                    "resource": "SizeConverter",
                    "args": {
                      "from": "$_memory",
                      "to": "MiB"
                    },
                    "type": "tool",
                    "store": "$_memory",
                    "action": ""
                  },
                  {
                    "resource": "SizeConverter",
                    "args": {
                      "from": "$_disk",
                      "to": "GiB"
                    },
                    "type": "tool",
                    "store": "$_disk",
                    "action": ""
                  },
                  {
                    "resource": "Flavor",
                    "args": {
                      "minDisk": "$_disk",
                      "minRam": "$_memory"
                    },
                    "type": "resource",
                    "store": "$_flavors",
                    "action": "get"
                  },
                  {
                    "resource": "JsonFirst",
                    "args": {
                      "data": "$_flavors"
                    },
                    "type": "tool",
                    "store": "$_flavor",
                    "action": ""
                  },
                  {
                    "resource": "JsonPath",
                    "args": {
                      "data": "$_flavor",
                      "path": ".name"
                    },
                    "type": "tool",
                    "store": "flavorRef",
                    "action": ""
                  }
                ]
              },
              "imageRef": {
                "required": true,
                "explicit": {
                  "$id": "imageRef",
                  "oeRequired": true,
                  "type": "string"
                },
                "implicit": null
              },
              "key_name": {
                "required": false,
                "explicit": {
                  "$id": "key_name",
                  "type": "string"
                },
                "implicit": null
              },
              "name": {
                "required": true,
                "explicit": {
                  "type": "string"
                },
                "implicit": [
                  {
                    "resource": "NameGenerator",
                    "args": {
                      "random": true
                    },
                    "type": "tool",
                    "store": "name",
                    "action": "create"
                  }
                ]
              },
              "networks": {
                "required": true,
                "explicit": {
                  "$id": "networks",
                  "oeRequired": true,
                  "type": "string"
                },
                "implicit": null
              }
            },
            "debug": false
          },
          "provisioner": {
            "resource": "Server",
            "parameters": {
              "flavorRef": {
                "type": "string"
              },
              "imageRef": {
                "type": "string"
              },
              "key_name": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "networks": {
                "type": "string"
              }
            },
            "match": {
              "properties": {
                "providerType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "action": "create",
            "logic": "linchpin_openstack_create.tmpl",
            "debug": false,
            "required": [
              "name",
              "flavorRef",
              "imageRef",
              "key_name"
            ]
          },
          "resolution_tree": {
            "flavorRef": {
              "resolved": true,
              "tasks": [
                {
                  "task_type": "tool",
                  "resolved": true,
                  "alternatives": null,
                  "tool": {
                    "name": "SizeConverter",
                    "parameters": {
                      "from": {
                        "type": "string"
                      },
                      "to": {
                        "type": "string"
                      }
                    },
                    "script": "size_converter.sh"
                  },
                  "solution": {
                    "action": "",
                    "debug": false,
                    "provider": {
                      "match": null,
                      "implicit": null,
                      "resource": "",
                      "action": "",
                      "parameters": null,
                      "debug": false
                    },
                    "provisioner": {
                      "resource": "",
                      "parameters": null,
                      "match": null,
                      "action": "",
                      "logic": "",
                      "debug": false,
                      "required": null
                    },
                    "resolution_tree": null,
                    "resolved": false,
                    "resource": {
                      "Name": "",
                      "args": null
                    },
                    "size": 0,
                    "system": null
                  }
                },
                {
                  "task_type": "tool",
                  "resolved": true,
                  "alternatives": null,
                  "tool": {
                    "name": "SizeConverter",
                    "parameters": {
                      "from": {
                        "type": "string"
                      },
                      "to": {
                        "type": "string"
                      }
                    },
                    "script": "size_converter.sh"
                  },
                  "solution": {
                    "action": "",
                    "debug": false,
                    "provider": {
                      "match": null,
                      "implicit": null,
                      "resource": "",
                      "action": "",
                      "parameters": null,
                      "debug": false
                    },
                    "provisioner": {
                      "resource": "",
                      "parameters": null,
                      "match": null,
                      "action": "",
                      "logic": "",
                      "debug": false,
                      "required": null
                    },
                    "resolution_tree": null,
                    "resolved": false,
                    "resource": {
                      "Name": "",
                      "args": null
                    },
                    "size": 0,
                    "system": null
                  }
                },
                {
                  "task_type": "resource",
                  "resolved": true,
                  "alternatives": [
                    {
                      "action": "get",
                      "debug": false,
                      "provider": {
                        "match": {
                          "properties": {
                            "providerType": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "implicit": null,
                        "resource": "Flavor",
                        "action": "get",
                        "parameters": {
                          "is_public": {
                            "required": false,
                            "explicit": {
                              "$id": "is_public",
                              "type": "boolean"
                            },
                            "implicit": null
                          },
                          "minDisk": {
                            "required": false,
                            "explicit": {
                              "$id": "minDisk",
                              "type": "string"
                            },
                            "implicit": null
                          },
                          "minRam": {
                            "required": false,
                            "explicit": {
                              "$id": "minRam",
                              "type": "string"
                            },
                            "implicit": null
                          }
                        },
                        "debug": false
                      },
                      "provisioner": {
                        "resource": "Flavor",
                        "parameters": {
                          "is_public": {
                            "type": "boolean"
                          },
                          "minDisk": {
                            "type": "string"
                          },
                          "minRam": {
                            "type": "string"
                          }
                        },
                        "match": {
                          "properties": {
                            "providerType": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "action": "get",
                        "logic": "openstack_mock_flavor.tmpl",
                        "debug": false,
                        "required": null
                      },
                      "resolution_tree": {
                        "is_public": {
                          "resolved": true,
                          "tasks": null,
                          "param_type": "implicit"
                        },
                        "minDisk": {
                          "resolved": true,
                          "tasks": null,
                          "param_type": "explicit"
                        },
                        "minRam": {
                          "resolved": true,
                          "tasks": null,
                          "param_type": "explicit"
                        }
                      },
                      "resolved": true,
                      "resource": {
                        "Name": "Flavor",
                        "args": {
                          "minDisk": "$_disk",
                          "minRam": "$_memory"
                        }
                      },
                      "size": 0,
                      "system": {
                        "providerType": "Openstack"
                      }
                    }
                  ],
                  "tool": {
                    "name": "",
                    "parameters": null,
                    "script": ""
                  },
                  "solution": {
                    "action": "",
                    "debug": false,
                    "provider": {
                      "match": null,
                      "implicit": null,
                      "resource": "",
                      "action": "",
                      "parameters": null,
                      "debug": false
                    },
                    "provisioner": {
                      "resource": "",
                      "parameters": null,
                      "match": null,
                      "action": "",
                      "logic": "",
                      "debug": false,
                      "required": null
                    },
                    "resolution_tree": null,
                    "resolved": false,
                    "resource": {
                      "Name": "",
                      "args": null
                    },
                    "size": 0,
                    "system": null
                  }
                },
                {
                  "task_type": "tool",
                  "resolved": true,
                  "alternatives": null,
                  "tool": {
                    "name": "JsonFirst",
                    "parameters": {
                      "data": {
                        "type": "string"
                      }
                    },
                    "script": "json_first.sh"
                  },
                  "solution": {
                    "action": "",
                    "debug": false,
                    "provider": {
                      "match": null,
                      "implicit": null,
                      "resource": "",
                      "action": "",
                      "parameters": null,
                      "debug": false
                    },
                    "provisioner": {
                      "resource": "",
                      "parameters": null,
                      "match": null,
                      "action": "",
                      "logic": "",
                      "debug": false,
                      "required": null
                    },
                    "resolution_tree": null,
                    "resolved": false,
                    "resource": {
                      "Name": "",
                      "args": null
                    },
                    "size": 0,
                    "system": null
                  }
                },
                {
                  "task_type": "tool",
                  "resolved": true,
                  "alternatives": null,
                  "tool": {
                    "name": "JsonPath",
                    "parameters": {
                      "data": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      }
                    },
                    "script": "json_path.sh"
                  },
                  "solution": {
                    "action": "",
                    "debug": false,
                    "provider": {
                      "match": null,
                      "implicit": null,
                      "resource": "",
                      "action": "",
                      "parameters": null,
                      "debug": false
                    },
                    "provisioner": {
                      "resource": "",
                      "parameters": null,
                      "match": null,
                      "action": "",
                      "logic": "",
                      "debug": false,
                      "required": null
                    },
                    "resolution_tree": null,
                    "resolved": false,
                    "resource": {
                      "Name": "",
                      "args": null
                    },
                    "size": 0,
                    "system": null
                  }
                }
              ],
              "param_type": "implicit"
            },
            "imageRef": {
              "resolved": true,
              "tasks": null,
              "param_type": "explicit"
            },
            "key_name": {
              "resolved": true,
              "tasks": null,
              "param_type": "explicit"
            },
            "name": {
              "resolved": true,
              "tasks": [
                {
                  "task_type": "tool",
                  "resolved": true,
                  "alternatives": null,
                  "tool": {
                    "name": "NameGenerator",
                    "parameters": {
                      "random": {
                        "type": "boolean"
                      }
                    },
                    "script": "name_generator.sh"
                  },
                  "solution": {
                    "action": "",
                    "debug": false,
                    "provider": {
                      "match": null,
                      "implicit": null,
                      "resource": "",
                      "action": "",
                      "parameters": null,
                      "debug": false
                    },
                    "provisioner": {
                      "resource": "",
                      "parameters": null,
                      "match": null,
                      "action": "",
                      "logic": "",
                      "debug": false,
                      "required": null
                    },
                    "resolution_tree": null,
                    "resolved": false,
                    "resource": {
                      "Name": "",
                      "args": null
                    },
                    "size": 0,
                    "system": null
                  }
                }
              ],
              "param_type": "implicit"
            },
            "networks": {
              "resolved": true,
              "tasks": null,
              "param_type": "explicit"
            }
          },
          "resolved": true,
          "resource": {
            "Name": "Server",
            "args": {
              "_disk": "100GiB",
              "_memory": "4GiB",
              "imageRef": "Fedora-31",
              "key_name": "ccit",
              "networks": "ccit-net"
            }
          },
          "size": 0,
          "system": {
            "providerType": "Openstack"
          }
        }
      ],
      "tools": [
        {
          "name": "SizeConverter",
          "parameters": {
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            }
          },
          "script": "size_converter.sh"
        },
        {
          "name": "JsonFirst",
          "parameters": {
            "data": {
              "type": "string"
            }
          },
          "script": "json_first.sh"
        },
        {
          "name": "JsonPath",
          "parameters": {
            "data": {
              "type": "string"
            },
            "path": {
              "type": "string"
            }
          },
          "script": "json_path.sh"
        },
        {
          "name": "JsonTransform",
          "parameters": {
            "data": {
              "type": "string"
            },
            "template": {
              "type": "string"
            }
          },
          "script": "json_transform.sh"
        },
        {
          "name": "JsonSort",
          "parameters": {
            "data": {
              "type": "string"
            },
            "sortBy": {
              "type": "string"
            },
            "sortType": {
              "enum": [
                "asc",
                "dec"
              ],
              "type": "string"
            }
          },
          "script": "json_sort.sh"
        },
        {
          "name": "NameGenerator",
          "parameters": {
            "random": {
              "type": "boolean"
            }
          },
          "script": "name_generator.sh"
        }
      ],
      "schedule_order": null
    },
    "tests": [
      {
        "description": "Add empty provisioner",
        "action": "AddProvisioner",
        "args": [
          {
            "resource": "",
            "parameters": {},
            "match": {},
            "action": "",
            "logic": "",
            "debug": false,
            "required": []
          }
        ],
        "want": [
            {
            "systems": [],
            "providers": [],
            "resources": [],
            "provisioners": [
              {
                "resource": "",
                "parameters": {},
                "match": {},
                "action": "",
                "logic": "",
                "debug": false,
                "required": []
              }
            ],
            "solutions": [],
            "tools": [],
            "schedule_order": []
          }
        ]
      },
      {
        "description": "Add empty provider API",
        "action": "AddProvider",
        "args": [
          {
            "empty": {
              "implicit": {},
              "providers": [
                {
                  "match": {},
                  "implicit": {},
                  "resource": {},
                  "action": "",
                  "parameters": {},
                  "debug": false
                }
              ]
            }
          }
        ],
        "want": [
          {
            "systems": [],
            "providers": [
              {
                "match": {},
                "implicit": {},
                "resource": "empty",
                "action": "",
                "parameters": {},
                "debug": false
              }
            ],
            "resources": [],
            "provisioners": [],
            "solutions": [],
            "tools": [],
            "schedule_order": []
          }
        ]
      },
      {
        "description": "Add empty system",
        "action": "AddSystem",
        "args": [
          {}
        ],
        "want": [
          {
            "systems": [{}],
            "providers": [],
            "resources": [],
            "provisioners": [],
            "solutions": [],
            "tools": [],
            "schedule_order": []
          }
        ]
      },
      {
        "description": "Add empty resource",
        "action": "AddResource",
        "args": [
          {
            "resource": "",
            "args": {}
          }
        ],
        "want": [
          {
            "systems": [],
            "providers": [],
            "resources": [{
              "Name": "",
              "args": {}
            }],
            "provisioners": [],
            "solutions": [],
            "tools": [],
            "schedule_order": []
          }
        ]
      },
      {
        "description": "Add empty tool API",
        "action": "AddTool",
        "args": [{}],
        "want": [
          {
            "systems": [],
            "providers": [],
            "resources": [],
            "provisioners": [],
            "solutions": [],
            "tools": [],
            "schedule_order": []
          }
        ]
      },
      {
        "description": "Run match",
        "action": "Match",
        "args": [],
        "want": [
          {
            "systems": [],
            "providers": [],
            "resources": [],
            "provisioners": [],
            "solutions": [],
            "tools": [],
            "schedule_order": []
          }
        ]
      },
      {
        "description": "Run resolve",
        "action": "Resolve",
        "args": [],
        "want": [
          {
          }
        ]
      },
      {
        "description": "Run",
        "action": "Run",
        "args": [],
        "want": [
          [],
          null
        ]
      },
      {
        "description": "Find valid solutions and order by size (none)",
        "action": "Schedule",
        "args": [
          "create"
        ],
        "want": [
          null
        ]
      },
      {
        "description": "Get engine solutions",
        "action": "GetSolutions",
        "args": [],
        "want": [
          null
        ]
      },
      {
        "description": "Gets a tool that matches the Implicit task",
        "action": "getTool",
        "args": [
          {
            "resource": "ExampleTool",
            "args": {},
            "type": "tool",
            "action": "get",
            "store": "example"
          }
        ],
        "want": [
          {
            "name": "",
            "parameters": null,
            "script": ""
          },
          "tool ExampleTool not found"
        ]
      },
      {
        "description": "Match provisioner and provider",
        "action": "matchProvidersProvisioners",
        "args": [
          {},
          {}
        ],
        "want": [
          null,
          null
        ]
      },
      {
        "description": "Resolve empty solution and empty engine",
        "action": "resolveDependencies",
        "args": [{}],
        "want": [
          {
            "action": "",
            "debug": false,
            "provider": {
              "match": null,
              "implicit": null,
              "resource": "",
              "action": "",
              "parameters": null,
              "debug": false
            },
            "provisioner": {
              "parameters": null,
              "match": null,
              "action": "",
              "logic": "",
              "debug": false,
              "required": null,
              "resource": ""
            },
            "resolution_tree": {},
            "resolved": true,
            "resource": {
              "args": null,
              "Name": ""
            },
            "size": 0,
            "system": null
          },
          {
            "description": "Resolve empty solution and empty engine",
            "action": "resolveDependencies",
            "args": [{}],
            "want": [
              {
                "action": "",
                "debug": false,
                "provider": {
                  "match": null,
                  "implicit": null,
                  "resource": "",
                  "action": "",
                  "parameters": null,
                  "debug": false
                },
                "provisioner": {
                  "parameters": null,
                  "match": null,
                  "action": "",
                  "logic": "",
                  "debug": false,
                  "required": null,
                  "resource": ""
                },
                "resolution_tree": {},
                "resolved": true,
                "resource": {
                  "args": null,
                  "Name": ""
                },
                "size": 0,
                "system": null
              }
            ]
          }
        ]
      }
    ]
  }
]